install.packages("raster")
install.packages("sf")
install.packages("sp")
install.packages("rgeos")
install.packages("rgdal")
install.packages("lwgeom")
getwd()
setwd("../code/")
getwd()
density <- plot(density(cor_vec))
# Load in data
rm(list = ls())
load("../data/KeyWestAnnualMeanTemperature.RData")
# Inspect data
class(ats)
head(ats)
plot(ats)
# Calculate correlation between year and temperature
correlation <- cor(ats$Year, ats$Temp, method = "spearman")
# Create empty vector
cor_vec <- c()
# Calculate correlations for randomly shuffled temperatures
for(i in 1:10000){
cor_vec <- append(cor_vec, cor(ats$Year[],
sample(ats$Temp[], nrow(ats)),
method = "spearman"))
}
# Get number of randoms correlations > original and calculate
# p value
num <- sum(cor_vec > correlation)
p_value <- num/100000
density <- plot(density(cor_vec))
density <- plot(density(cor_vec), correlation)
density <- plot(density(cor_vec)) + lines(density(correlation), col = "red")
density <- hist(density(cor_vec)) + hist(density(correlation), col = "red")
density <- hist(cor_vec) + hist(correlation, col = "red")
density <- hist(cor_vec)
density <- hist(cor_vec) + hist(correlation, col = "red", add = TRUE)
?hist
density <- hist(cor_vec) + hist(correlation*1000, col = "red", add = TRUE)
density <- hist(cor_vec) + hist(correlation*1000, add = TRUE)
?c
cor_wow <- c(correlation*1000)
cor_wow <- vector(correlation, 1000)
cor_wow <- rep(correlation, times = 1000)
density <- hist(cor_vec) + hist(cor_wow, col = "red", add = TRUE)
?ggplot
# Load in data
require(ggplot)
# Load in data
require(ggplot2)
?ggplot
# Create images for Latex file
p <- ggplot(aes(ats$Year, ats$Temp))
# Create images for Latex file
p <- ggplot(data = ats, aes(Year, Temp))
p
# Create images for Latex file
p <- ggplot(data = ats, aes(Year, Temp)) + scatter.smooth()
# Create images for Latex file
p <- ggplot(data = ats, aes(Year, Temp)) + geom_point()
p
# Create images for Latex file
p <- ggplot(data = ats, aes(Year, Temp)) + geom_point() +
theme(axis.title.y = "Temperature (C)") +
geom_smooth(method = "lm", se = TRUE, fullrange = TRUE)
# Create images for Latex file
p <- ggplot(data = ats, aes(Year, Temp)) + geom_point() +
theme(axis.title.y = "Temperature (C)") +
geom_smooth(method = "lm", se = TRUE, fullrange = TRUE)
p
file.edit("PP_Regress.R")
# Create images for Latex file
p <- ggplot(data = ats, aes(Year, Temp)) + geom_point() +
labs(y = "Temperature (C)") +
geom_smooth(method = "lm", se = TRUE, fullrange = TRUE)
p
# Create images for Latex file
p <- ggplot(data = ats, aes(Year, Temp)) + geom_point() +
labs(y = "Temperature (C)") +
geom_smooth(method = "lm", se = TRUE, fullrange = TRUE) +
stat_cor(method = "spearman")
# Create images for Latex file
p <- ggplot(data = ats, aes(Year, Temp)) + geom_point() +
labs(y = "Temperature (C)") +
geom_smooth(method = "lm", se = TRUE, fullrange = TRUE)
p
png("../results/temp_year_scatter.png")
print(p)
dev.off()
cor_wow <- rep(correlation, times = 1000)
density <- hist(cor_vec) + hist(cor_wow, col = "red", add = TRUE)
q <- ggplot(data = cor_vec, aes(cor_vec)) + geom_density()
q <- qplot(cor_vec, geom = "density")
q
q <- qplot(cor_vec, geom = "density", fill = "blue")
q
q <- qplot(cor_vec, geom = "density", fill = cor_vec)
q
q <- qplot(cor_vec, geom = "density", fill = cor_vec) +
abline(v = correlation)
q
q <- qplot(cor_vec, geom = "density", fill = cor_vec) +
abline(v = 0)
q
q <- qplot(cor_vec, geom = "density", fill = cor_vec,
xlim = c(-1,1)) +
abline(v = 0)
q
q <- qplot(cor_vec, geom = "density", fill = cor_vec,
xlim = c(-1,1)) +
abline(v = correlation)
q
q <- qplot(cor_vec, geom = "density", fill = cor_vec,
xlim = c(-1,1)) +
labs(x = "Correlation coefficients", y = "Density")
# abline(v = correlation)
q
q <- qplot(cor_vec, geom = "density", fill = cor_vec,
xlim = c(-1,1)) +
labs(x = "Correlation coefficient", y = "Density")
# abline(v = correlation)
q
q <- qplot(cor_vec, geom = "density", fill = cor_vec,
xlim = c(-0.5,0.5)) +
labs(x = "Correlation coefficient", y = "Density")
# abline(v = correlation)
q
q <- qplot(cor_vec, geom = "density", fill = cor_vec) +
labs(x = "Correlation coefficient", y = "Density")
# abline(v = correlation)
q
q <- qplot(cor_vec, geom = "density", fill = cor_vec) +
labs(x = "Correlation coefficient", y = "Density") +
abline(v = mean(cor_vec))
q
q <- qplot(cor_vec, geom = "density", fill = cor_vec) +
labs(x = "Correlation coefficient", y = "Density") +
geom_vline(xintercept = correlation)
q
q <- qplot(cor_vec, geom = "density", fill = cor_vec) +
labs(x = "Correlation coefficient", y = "Density") +
geom_vline(xintercept = correlation, colour = "red")
q
q <- qplot(cor_vec, geom = "density", fill = cor_vec) +
labs(x = "Correlation coefficient", y = "Density") +
xlim(c(-0.6,0.6)) +
geom_vline(xintercept = correlation, colour = "red")
q
?qplot
q <- qplot(cor_vec, fill = cor_vec) +
labs(x = "Correlation coefficient", y = "Density") +
xlim(c(-0.6,0.6)) +
geom_vline(xintercept = correlation, colour = "red")
q
q <- qplot(cor_vec, fill = cor_vec) +
labs(x = "Correlation coefficient", y = "Occurences") +
xlim(c(-0.6,0.6)) +
geom_vline(xintercept = correlation, colour = "red")
q
?geom_vline
q <- qplot(cor_vec, fill = cor_vec)
q
q <- qplot(cor_vec, fill = cor_vec) +
labs(x = "Correlation coefficient", y = "Occurences")
q
?png
png("../results/temp_year_scatter.png", width = 240, height = 240)
print(p)
dev.off()
file.edit("DataWrangTidy.R")
file.edit("get_TreeHeight.R")
file.edit("TreeHeight.R")
?commandArgs
?basename
?tools::file_path_sans_ext
source("get_TreeHeight.R")
rm(list = ls())
?paste
paste("1st", "2nd", "3rd", collapse = ", ") # probably not what you wanted
paste("1st", "2nd", "3rd", sep = ", ")
# Load in tree data from csv
browser()
source("get_TreeHeight.R")
n
source("get_TreeHeight.R")
paste("../results/", stripped, "_treeheights.csv", sep = "")
stripped <- tools::file_path_sans_ext("../data/trees.csv")
stripped <- tools::file_path_sans_ext(basename("../data/trees.csv"))
rm(list = ls())
# Read data and look at feeding interaction data
MyDF <- read.csv("../data/EcolArchives-E089-51-D1.csv")
# Read data and look at feeding interaction data
MyDF <- read.csv("../data/EcolArchives-E089-51-D1.csv")
head(MyDF$Prey.mass[which(MyDF$Prey.mass.unit == "mg")])
# Read data and look at feeding interaction data
MyDF <- read.csv("../data/EcolArchives-E089-51-D1.csv")
MyDF$Prey.mass[which(MyDF$Prey.mass.unit == "mg")] <-
MyDF$Prey.mass[which(MyDF$Prey.mass.unit == "mg")] / 1000
head(MyDF$Prey.mass[which(MyDF$Prey.mass.unit == "mg")])
source("PP_Regress.R")
source("PP_Dists.R")
file.edit("PP_Dists.R")
q <- qplot(cor_vec, fill = cor_vec) +
labs(x = "Correlation coefficient", y = "Occurences")
rm(list = ls())
# Load in data
library(ggplot2)
rm(list = ls())
load("../data/KeyWestAnnualMeanTemperature.RData")
# Inspect data
class(ats)
head(ats)
plot(ats)
# Calculate correlation between year and temperature
correlation <- cor(ats$Year, ats$Temp, method = "spearman")
# Create empty vector
cor_vec <- c()
# Calculate correlations for randomly shuffled temperatures
for(i in 1:10000){
cor_vec <- append(cor_vec, cor(ats$Year[],
sample(ats$Temp[], nrow(ats)),
method = "spearman"))
}
# Get number of randoms correlations > original and calculate
# p value
num <- sum(cor_vec > correlation)
p_value <- num/10000
# Create images for Latex file
p <- ggplot(data = ats, aes(Year, Temp)) + geom_point() +
labs(y = "Temperature (C)") +
geom_smooth(method = "lm", se = TRUE, fullrange = TRUE)
png("../results/temp_year_scatter.png", width = 240, height = 240)
print(p)
dev.off()
q <- qplot(cor_vec, fill = cor_vec) +
labs(x = "Correlation coefficient", y = "Occurences")
q
q <- qplot(density(cor_vec)) +
labs(x = "Correlation coefficient", y = "Occurences")
q
q <- plot(density(cor_vec)) +
labs(x = "Correlation coefficient", y = "Occurences")
q
q <- plot(density(cor_vec)) +
labs(x = "Correlation coefficient", y = "Occurences")
q <- ggplot(data = cor_vec, aes(cor_vec)) +
geom_density(alpha = 0.5) +
labs(x = "Correlation coefficient", y = "Occurences")
q
png("../results/temp_year_scatter.png")
print(p)
dev.off()
q <- ggplot(data = cor_vec, aes(cor_vec)) +
geom_density(alpha = 0.5) +
labs(x = "Correlation coefficient", y = "Occurences")
q <- qplot(data = cor_vec, aes(cor_vec)) +
geom_density(alpha = 0.5) +
labs(x = "Correlation coefficient", y = "Occurences")
q
q <- plot(density(cor_vec))
file.edit("PP_Dists.R")
q <- hist(density(cor_vec))
q
q <- hist(cor_vec)
q
q <- hist(cor_vec,
main = "Distribution of randomly permuted correlation coefficients")
q
q <- hist(cor_vec,
main = NULL)
q
q <- hist(cor_vec, main = NULL)
q
q <- hist(cor_vec, main = NULL, xlab = "Correlation coefficients")
q
png("../results/coeff_distro.png")
print(q)
dev.off()
png("../results/coeff_distro.png")
hist(cor_vec, main = NULL, xlab = "Correlation coefficients")
dev.off()
file.edit("PP_Regress.R")
require(dplyr)
require(tidyverse)
require(ggplot2)
require(broom)
rm(list = ls())
# Read data and look at feeding interaction data
MyDF <- read.csv("../data/EcolArchives-E089-51-D1.csv")
MyDF$Prey.mass[which(MyDF$Prey.mass.unit == "mg")] <-
MyDF$Prey.mass[which(MyDF$Prey.mass.unit == "mg")] / 1000
altered_df <- MyDF %>% subset(select =
c(Predator.mass, Prey.mass,
Type.of.feeding.interaction,
Predator.lifestage))
altered_df$Type.of.feeding.interaction <- factor(altered_df$Type.of.feeding.interaction)
altered_df$Predator.lifestage <- factor(altered_df$Predator.lifestage)
p <- ggplot(altered_df,
aes(x = Prey.mass, y = Predator.mass, colour = Predator.lifestage)) +
geom_point(shape=3) + geom_smooth(method="lm", fullrange=TRUE) +
facet_wrap( .~Type.of.feeding.interaction, ncol = 1, strip.position = "right") +
theme(legend.position = "bottom",
panel.border = element_rect(colour = "grey", fill = NA, size = 1.5),
panel.background = element_rect(fill = "transparent"),
panel.grid.major = element_line(colour = "grey", size = 0.2),
panel.grid.minor = element_line(colour = "grey", size = 0.1),
aspect.ratio = 1/3, strip.text = element_text(size = 7)) +
labs(x="Prey Mass in grams", y="Predator Mass in grams") +
scale_y_continuous(trans = "log10") + scale_x_continuous(trans = "log10") +
guides(colour = guide_legend(nrow = 1, byrow = TRUE))
p
p <- ggplot(altered_df,
aes(x = Prey.mass, y = Predator.mass, colour = Predator.lifestage)) +
geom_point(shape=3) + geom_smooth(method="lm", fullrange=TRUE) +
facet_wrap( .~Type.of.feeding.interaction, ncol = 1, strip.position = "right") +
theme(legend.position = "bottom",
panel.border = element_rect(colour = "grey", fill = NA, size = 1.5),
panel.background = element_rect(fill = "transparent"),
panel.grid.major = element_line(colour = "grey", size = 0.2),
panel.grid.minor = element_line(colour = "grey", size = 0.1),
aspect.ratio = 1/3, strip.text = element_text(size = 6)) +
labs(x="Prey Mass in grams", y="Predator Mass in grams") +
scale_y_continuous(trans = "log10") + scale_x_continuous(trans = "log10") +
guides(colour = guide_legend(nrow = 1, byrow = TRUE))
p
p <- ggplot(altered_df,
aes(x = Prey.mass, y = Predator.mass, colour = Predator.lifestage)) +
geom_point(shape=3) + geom_smooth(method="lm", fullrange=TRUE) +
facet_wrap( .~Type.of.feeding.interaction, ncol = 1, strip.position = "right") +
theme(legend.position = "bottom",
panel.border = element_rect(colour = "grey", fill = NA, size = 1.5),
panel.background = element_rect(fill = "transparent"),
panel.grid.major = element_line(colour = "grey", size = 0.2),
panel.grid.minor = element_line(colour = "grey", size = 0.1),
aspect.ratio = 1/3, strip.text = element_text(size = 5.5)) +
labs(x="Prey Mass in grams", y="Predator Mass in grams") +
scale_y_continuous(trans = "log10") + scale_x_continuous(trans = "log10") +
guides(colour = guide_legend(nrow = 1, byrow = TRUE))
p
version()
??version
R.version()
sessionInfo()
update.packages()
update.packages(ask = FALSE)
aes(x = Prey.mass, y = Predator.mass, colour = Predator.lifestage)) +
geom_point(shape=3) + geom_smooth(method="lm", fullrange=TRUE) +
facet_wrap( .~Type.of.feeding.interaction, ncol = 1, strip.position = "right") +
theme(legend.position = "bottom",
panel.border = element_rect(colour = "grey", fill = NA, size = 1.5),
panel.background = element_rect(fill = "transparent"),
panel.grid.major = element_line(colour = "grey", size = 0.2),
panel.grid.minor = element_line(colour = "grey", size = 0.1),
aspect.ratio = 1/3, strip.text = element_text(size = 5.5),
legend.title = (face = "bold", size = 12)) +
labs(x="Prey Mass in grams", y="Predator Mass in grams") +
scale_y_continuous(trans = "log10") + scale_x_continuous(trans = "log10") +
guides(colour = guide_legend(nrow = 1, byrow = TRUE))
p
p <- ggplot(altered_df,
aes(x = Prey.mass, y = Predator.mass, colour = Predator.lifestage)) +
geom_point(shape=3) + geom_smooth(method="lm", fullrange=TRUE) +
facet_wrap( .~Type.of.feeding.interaction, ncol = 1, strip.position = "right") +
theme(legend.position = "bottom",
panel.border = element_rect(colour = "grey", fill = NA, size = 1.5),
panel.background = element_rect(fill = "transparent"),
panel.grid.major = element_line(colour = "grey", size = 0.2),
panel.grid.minor = element_line(colour = "grey", size = 0.1),
aspect.ratio = 1/3, strip.text = element_text(size = 5.5),
legend.title = (face = "bold", size = 8)) +
labs(x="Prey Mass in grams", y="Predator Mass in grams") +
scale_y_continuous(trans = "log10") + scale_x_continuous(trans = "log10") +
guides(colour = guide_legend(nrow = 1, byrow = TRUE))
p <- ggplot(altered_df,
aes(x = Prey.mass, y = Predator.mass, colour = Predator.lifestage)) +
geom_point(shape=3) + geom_smooth(method="lm", fullrange=TRUE) +
facet_wrap( .~Type.of.feeding.interaction, ncol = 1, strip.position = "right") +
theme(legend.position = "bottom",
panel.border = element_rect(colour = "grey", fill = NA, size = 1.5),
panel.background = element_rect(fill = "transparent"),
panel.grid.major = element_line(colour = "grey", size = 0.2),
panel.grid.minor = element_line(colour = "grey", size = 0.1),
aspect.ratio = 1/3, strip.text = element_text(size = 5.5),
legend.title = (face = "bold", size = 8)) +
labs(x="Prey Mass in grams", y="Predator Mass in grams") +
scale_y_continuous(trans = "log10") + scale_x_continuous(trans = "log10") +
guides(colour = guide_legend(nrow = 1, byrow = TRUE))
p
p <- ggplot(altered_df,
aes(x = Prey.mass, y = Predator.mass, colour = Predator.lifestage)) +
geom_point(shape=3) + geom_smooth(method="lm", fullrange=TRUE) +
facet_wrap( .~Type.of.feeding.interaction, ncol = 1, strip.position = "right") +
theme(legend.position = "bottom",
panel.border = element_rect(colour = "grey", fill = NA, size = 1.5),
panel.background = element_rect(fill = "transparent"),
panel.grid.major = element_line(colour = "grey", size = 0.2),
panel.grid.minor = element_line(colour = "grey", size = 0.1),
aspect.ratio = 1/3, strip.text = element_text(size = 5.5),
legend.title = (face="bold",size = 8)) +
labs(x="Prey Mass in grams", y="Predator Mass in grams") +
scale_y_continuous(trans = "log10") + scale_x_continuous(trans = "log10") +
guides(colour = guide_legend(nrow = 1, byrow = TRUE))
p
p <- ggplot(altered_df,
aes(x = Prey.mass, y = Predator.mass, colour = Predator.lifestage)) +
geom_point(shape=3) + geom_smooth(method="lm", fullrange=TRUE) +
facet_wrap( .~Type.of.feeding.interaction, ncol = 1, strip.position = "right") +
theme(legend.position = "bottom",
panel.border = element_rect(colour = "grey", fill = NA, size = 1.5),
panel.background = element_rect(fill = "transparent"),
panel.grid.major = element_line(colour = "grey", size = 0.2),
panel.grid.minor = element_line(colour = "grey", size = 0.1),
aspect.ratio = 1/3, strip.text = element_text(size = 5.5),
legend.title = element_text(fill = "bold", size = 8)) +
labs(x="Prey Mass in grams", y="Predator Mass in grams") +
scale_y_continuous(trans = "log10") + scale_x_continuous(trans = "log10") +
guides(colour = guide_legend(nrow = 1, byrow = TRUE))
p
help(ggplot)
source("Florida.R")
help("geom_smooth")
source("Florida.R")
range(ats$Temp)
source("Florida.R")
source("Florida.R")
source("Florida.R")
source("Florida.R")
source("Florida.R")
source("Florida.R")
source("Florida.R")
source("Florida.R")
source("Florida.R")
source("Florida.R")
source("Florida.R")
source("Florida.R")
source("Florida.R")
source("Florida.R")
source("Florida.R")
source("Florida.R")
source("Florida.R")
source("Florida.R")
p_value
correlation
